// <auto-generated />
using System;
using Loja.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Loja.Repository.Migrations
{
    [DbContext(typeof(LojaContext))]
    [Migration("20190826044735_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Loja.Domain.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Descricao");

                    b.Property<string>("Figura");

                    b.Property<string>("NomeDaCategoria");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Loja.Domain.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Endereco");

                    b.Property<string>("Nome");

                    b.Property<string>("Pais");

                    b.Property<string>("Telefone");

                    b.Property<string>("UF");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Loja.Domain.Fornecedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP");

                    b.Property<string>("CargoDoContato");

                    b.Property<string>("Cidade");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("Endereco");

                    b.Property<string>("NomeDaEmpresa");

                    b.Property<string>("NomeDoContato");

                    b.Property<string>("Pais");

                    b.Property<string>("Telefone");

                    b.Property<string>("UF");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Loja.Domain.ItensPedidos", b =>
                {
                    b.Property<int?>("ProdutosId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCadastro");

                    b.Property<int>("Desconto");

                    b.Property<int>("Id");

                    b.Property<int?>("PedidosClientesId");

                    b.Property<decimal>("PrecoUnitario");

                    b.Property<int>("Quantidade");

                    b.HasKey("ProdutosId");

                    b.HasIndex("PedidosClientesId");

                    b.ToTable("ItensPedidos");
                });

            modelBuilder.Entity("Loja.Domain.Pedidos", b =>
                {
                    b.Property<int?>("ClientesId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEPdeDestino");

                    b.Property<string>("CidadeDeDestino");

                    b.Property<int?>("ClientesId1");

                    b.Property<DateTime?>("DataDeEntrega");

                    b.Property<DateTime?>("DataDeEnvio");

                    b.Property<DateTime?>("DataDoPedido");

                    b.Property<string>("EnderecoDestinatario");

                    b.Property<decimal>("Frete");

                    b.Property<int>("Id");

                    b.Property<string>("NomeDestinatario");

                    b.Property<string>("PaisdeDestino");

                    b.HasKey("ClientesId");

                    b.HasIndex("ClientesId1");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Loja.Domain.Produtos", b =>
                {
                    b.Property<int>("FornecedoresId");

                    b.Property<int>("CategoriasId");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<byte>("Descontinuado");

                    b.Property<int>("Id");

                    b.Property<string>("NomedoProduto");

                    b.Property<decimal>("PrecoUnitario");

                    b.Property<int>("QuantidadePorUnidade");

                    b.Property<int>("UnidadesEmEstoque");

                    b.Property<int>("UnidadesPedidas");

                    b.HasKey("FornecedoresId", "CategoriasId");

                    b.HasIndex("CategoriasId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Loja.Domain.ItensPedidos", b =>
                {
                    b.HasOne("Loja.Domain.Pedidos", "Pedidos")
                        .WithMany()
                        .HasForeignKey("PedidosClientesId");
                });

            modelBuilder.Entity("Loja.Domain.Pedidos", b =>
                {
                    b.HasOne("Loja.Domain.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId1");
                });

            modelBuilder.Entity("Loja.Domain.Produtos", b =>
                {
                    b.HasOne("Loja.Domain.Categorias", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Loja.Domain.Fornecedores", "Fornecedores")
                        .WithMany()
                        .HasForeignKey("FornecedoresId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
